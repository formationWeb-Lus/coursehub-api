{
  "openapi": "3.0.0",
  "info": {
    "title": "CourseHub API",
    "version": "1.0.0",
    "description": "An API for managing online courses, users, and enrollments."
  },
  "servers": [
    {
      "url": "https://coursehub-api-2bva.onrender.com",
      "description": "Local server"
    }
  ],
  "paths": {
    "/api/courses": {
      "get": {
        "summary": "Get all courses",
        "responses": {
          "200": {
            "description": "List of courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Course" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new course",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Course" }
            }
          }
        },
        "responses": {
          "201": { "description": "Course created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/courses/{id}": {
      "get": {
        "summary": "Get a course by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Course found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Course" }
              }
            }
          },
          "404": { "description": "Course not found" }
        }
      },
      "put": {
        "summary": "Update a course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Course" }
            }
          }
        },
        "responses": {
          "200": { "description": "Course updated" },
          "400": { "description": "Invalid input" }
        }
      },
      "delete": {
        "summary": "Delete a course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Course deleted" },
          "404": { "description": "Course not found" }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Invalid input" }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Course": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "example": "Développement Web" },
          "description": { "type": "string", "example": "Un cours complet sur le développement web." },
          "price": { "type": "number", "example": 49.99 },
          "duration": { "type": "string", "example": "6 semaines" },
          "level": {
            "type": "string",
            "enum": ["beginner", "intermediate", "advanced"],
            "example": "beginner"
          },
          "category": { "type": "string", "example": "Programmation" },
          "teacherId": { "type": "string", "example": "60a7c279f82b9c6a0c8a3d70" },
          "createdAt": { "type": "string", "format": "date-time", "example": "2025-06-01T10:00:00Z" }
        },
        "required": ["title", "description", "price", "duration", "teacherId"]
      },
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Jean Dupont" },
          "email": { "type": "string", "example": "jean@example.com" },
          "password": { "type": "string", "example": "motdepasse123" },
          "role": {
            "type": "string",
            "enum": ["student", "teacher", "admin"],
            "example": "student"
          }
        },
        "required": ["name", "email", "password"]
      }
    }
  }
}
